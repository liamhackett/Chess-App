{"ast":null,"code":"export const tileIsEmptyOrOccupiedByOpponent = (position, boardState, team) => {\n  return !tileIsOccupied(position, boardState) || tileIsOccupiedByOpponent(position, boardState, team);\n};\nexport const tileIsOccupied = (position, boardState) => {\n  const piece = boardState.find(p => p.position.x === position.x && p.position.y === position.y);\n  if (piece) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport const tileIsOccupiedByOpponent = (position, boardState, team) => {\n  const piece = boardState.find(p => p.position.x === position.x && p.position.y === position.y && p.team !== team);\n  if (piece) {\n    return true;\n  } else {\n    return false;\n  }\n};","map":{"version":3,"names":["tileIsEmptyOrOccupiedByOpponent","position","boardState","team","tileIsOccupied","tileIsOccupiedByOpponent","piece","find","p","x","y"],"sources":["/Users/liamhackett/Desktop/Chess-App/src/referee/rules/GeneralRules.ts"],"sourcesContent":["import {TeamType , Piece, Position} from \"../../Constants\";\n\nexport const tileIsEmptyOrOccupiedByOpponent = (position: Position, boardState: Piece[], team: TeamType): boolean => {\n    return !tileIsOccupied(position, boardState) || tileIsOccupiedByOpponent(position, boardState, team);\n}\n\nexport const tileIsOccupied = (position: Position, boardState: Piece[]): boolean => {\n    const piece = boardState.find(p => p.position.x === position.x && p.position.y === position.y);\n    if(piece){\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport const tileIsOccupiedByOpponent = (position: Position, boardState: Piece[], team: TeamType): boolean => {\n    const piece = boardState.find(p => p.position.x === position.x && p.position.y === position.y && p.team !== team);\n    if (piece) {\n        return true;\n    }\n    else{\n        return false;\n    }\n}"],"mappings":"AAEA,OAAO,MAAMA,+BAA+B,GAAGA,CAACC,QAAkB,EAAEC,UAAmB,EAAEC,IAAc,KAAc;EACjH,OAAO,CAACC,cAAc,CAACH,QAAQ,EAAEC,UAAU,CAAC,IAAIG,wBAAwB,CAACJ,QAAQ,EAAEC,UAAU,EAAEC,IAAI,CAAC;AACxG,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACH,QAAkB,EAAEC,UAAmB,KAAc;EAChF,MAAMI,KAAK,GAAGJ,UAAU,CAACK,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACP,QAAQ,CAACQ,CAAC,KAAKR,QAAQ,CAACQ,CAAC,IAAID,CAAC,CAACP,QAAQ,CAACS,CAAC,KAAKT,QAAQ,CAACS,CAAC,CAAC;EAC9F,IAAGJ,KAAK,EAAC;IACL,OAAO,IAAI;EACf,CAAC,MACI;IACD,OAAO,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMD,wBAAwB,GAAGA,CAACJ,QAAkB,EAAEC,UAAmB,EAAEC,IAAc,KAAc;EAC1G,MAAMG,KAAK,GAAGJ,UAAU,CAACK,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACP,QAAQ,CAACQ,CAAC,KAAKR,QAAQ,CAACQ,CAAC,IAAID,CAAC,CAACP,QAAQ,CAACS,CAAC,KAAKT,QAAQ,CAACS,CAAC,IAAIF,CAAC,CAACL,IAAI,KAAKA,IAAI,CAAC;EACjH,IAAIG,KAAK,EAAE;IACP,OAAO,IAAI;EACf,CAAC,MACG;IACA,OAAO,KAAK;EAChB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}