{"ast":null,"code":"export const verticalAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nexport const horizontalAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nexport let PieceType = /*#__PURE__*/function (PieceType) {\n  PieceType[PieceType[\"PAWN\"] = 0] = \"PAWN\";\n  PieceType[PieceType[\"BISHOP\"] = 1] = \"BISHOP\";\n  PieceType[PieceType[\"KNIGHT\"] = 2] = \"KNIGHT\";\n  PieceType[PieceType[\"ROOK\"] = 3] = \"ROOK\";\n  PieceType[PieceType[\"QUEEN\"] = 4] = \"QUEEN\";\n  PieceType[PieceType[\"KING\"] = 5] = \"KING\";\n  return PieceType;\n}({});\nexport let TeamType = /*#__PURE__*/function (TeamType) {\n  TeamType[TeamType[\"OPPONENT\"] = 0] = \"OPPONENT\";\n  TeamType[TeamType[\"OUR\"] = 1] = \"OUR\";\n  return TeamType;\n}({});\nexport const initialBoardState = [{\n  image: \"assets/images/rook_b.png\",\n  x: 0\n}];\nfor (let p = 0; p < 2; p++) {\n  const teamType = p === 0 ? TeamType.OPPONENT : TeamType.OUR;\n  const type = teamType === TeamType.OPPONENT ? \"b\" : \"w\";\n  const y = teamType === TeamType.OPPONENT ? 7 : 0;\n  initialBoardState.push({\n    image: `assets/images/rook_${type}.png`,\n    x: 0,\n    y: y,\n    type: PieceType.ROOK,\n    team: teamType\n  });\n  initialBoardState.push({\n    image: `assets/images/rook_${type}.png`,\n    x: 7,\n    y: y,\n    type: PieceType.ROOK,\n    team: teamType\n  });\n  initialBoardState.push({\n    image: `assets/images/knight_${type}.png`,\n    x: 1,\n    y: y,\n    type: PieceType.KNIGHT,\n    team: teamType\n  });\n  initialBoardState.push({\n    image: `assets/images/knight_${type}.png`,\n    x: 6,\n    y: y,\n    type: PieceType.KNIGHT,\n    team: teamType\n  });\n  initialBoardState.push({\n    image: `assets/images/bishop_${type}.png`,\n    x: 2,\n    y: y,\n    type: PieceType.BISHOP,\n    team: teamType\n  });\n  initialBoardState.push({\n    image: `assets/images/bishop_${type}.png`,\n    x: 5,\n    y: y,\n    type: PieceType.BISHOP,\n    team: teamType\n  });\n  initialBoardState.push({\n    image: `assets/images/queen_${type}.png`,\n    x: 3,\n    y: y,\n    type: PieceType.QUEEN,\n    team: teamType\n  });\n  initialBoardState.push({\n    image: `assets/images/king_${type}.png`,\n    x: 4,\n    y: y,\n    type: PieceType.KING,\n    team: teamType\n  });\n}\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({\n    image: \"assets/images/pawn_b.png\",\n    x: i,\n    y: 6,\n    type: PieceType.PAWN,\n    team: TeamType.OPPONENT\n  });\n}\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({\n    image: \"assets/images/pawn_w.png\",\n    x: i,\n    y: 1,\n    type: PieceType.PAWN,\n    team: TeamType.OUR\n  });\n}","map":{"version":3,"names":["verticalAxis","horizontalAxis","PieceType","TeamType","initialBoardState","image","x","p","teamType","OPPONENT","OUR","type","y","push","ROOK","team","KNIGHT","BISHOP","QUEEN","KING","i","PAWN"],"sources":["/Users/liamhackett/Desktop/Chess-App/src/Constants.ts"],"sourcesContent":["export const verticalAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nexport const horizontalAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n\nexport interface Piece {\n    image: string;\n    x: number;\n    y: number;\n    type: PieceType;\n    team: TeamType;\n    enPassant?: boolean;\n}\n\nexport enum PieceType {\n    PAWN,\n    BISHOP,\n    KNIGHT,\n    ROOK, \n    QUEEN,\n    KING\n}\n\nexport enum TeamType {\n    OPPONENT,\n    OUR\n}\n\nexport const initialBoardState: Piece[] = [\n    {\n        image: \"assets/images/rook_b.png\",\n        x: 0\n        \n    }\n];\n\nfor(let p = 0; p < 2; p++){\n    const teamType = (p === 0) ?  TeamType.OPPONENT : TeamType.OUR;\n    const type = (teamType === TeamType.OPPONENT) ? \"b\" : \"w\";\n    const y =  (teamType === TeamType.OPPONENT) ? 7 : 0;\n    initialBoardState.push({image: `assets/images/rook_${type}.png`, x: 0, y: y, type: PieceType.ROOK, team: teamType});\n    initialBoardState.push({image: `assets/images/rook_${type}.png`, x: 7, y: y, type: PieceType.ROOK, team: teamType});\n    initialBoardState.push({image: `assets/images/knight_${type}.png`, x: 1, y: y, type: PieceType.KNIGHT, team: teamType});\n    initialBoardState.push({image: `assets/images/knight_${type}.png`, x: 6, y: y, type: PieceType.KNIGHT, team: teamType});\n    initialBoardState.push({image: `assets/images/bishop_${type}.png`, x: 2, y: y, type: PieceType.BISHOP, team: teamType});\n    initialBoardState.push({image: `assets/images/bishop_${type}.png`, x: 5, y: y, type: PieceType.BISHOP, team: teamType});\n    initialBoardState.push({image: `assets/images/queen_${type}.png`, x: 3, y: y, type: PieceType.QUEEN, team: teamType});\n    initialBoardState.push({image: `assets/images/king_${type}.png`, x: 4, y: y, type: PieceType.KING, team: teamType});\n}\n\n\n\nfor(let i = 0; i < 8; i++){\n    initialBoardState.push({image: \"assets/images/pawn_b.png\", x: i, y: 6, type: PieceType.PAWN, team: TeamType.OPPONENT});\n}\n\nfor(let i = 0; i < 8; i++){\n    initialBoardState.push({image: \"assets/images/pawn_w.png\", x: i, y: 1, type: PieceType.PAWN, team: TeamType.OUR});\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}