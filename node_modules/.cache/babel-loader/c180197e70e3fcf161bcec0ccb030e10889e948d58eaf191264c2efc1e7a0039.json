{"ast":null,"code":"var _jsxFileName = \"/Users/liamhackett/Desktop/Chess-App/src/components/Chessboard/Chessboard.tsx\",\n  _s = $RefreshSig$();\nimport Tile from '../Tile/Tile';\nimport './Chessboard.css';\nimport { useRef, useState } from 'react';\nimport Referee from \"../../referee/Referee\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst verticalAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nconst horizontalAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nexport let PieceType = /*#__PURE__*/function (PieceType) {\n  PieceType[PieceType[\"PAWN\"] = 0] = \"PAWN\";\n  PieceType[PieceType[\"BISHOP\"] = 1] = \"BISHOP\";\n  PieceType[PieceType[\"KNIGHT\"] = 2] = \"KNIGHT\";\n  PieceType[PieceType[\"ROOK\"] = 3] = \"ROOK\";\n  PieceType[PieceType[\"QUEEN\"] = 4] = \"QUEEN\";\n  PieceType[PieceType[\"KING\"] = 5] = \"KING\";\n  return PieceType;\n}({});\nexport let TeamType = /*#__PURE__*/function (TeamType) {\n  TeamType[TeamType[\"OPPONENT\"] = 0] = \"OPPONENT\";\n  TeamType[TeamType[\"OUR\"] = 1] = \"OUR\";\n  return TeamType;\n}({});\n\n// const pieces: Piece[] = [];\n\nconst initialBoardState = [];\nfor (let p = 0; p < 2; p++) {\n  const teamType = p === 0 ? TeamType.OPPONENT : TeamType.OUR;\n  const type = teamType === TeamType.OPPE ? \"b\" : \"w\";\n  const y = p === 0 ? 7 : 0;\n  initialBoardState.push({\n    image: `assets/images/rook_${type}.png`,\n    x: 0,\n    y: y,\n    type: PieceType.ROOK\n  });\n  initialBoardState.push({\n    image: `assets/images/rook_${type}.png`,\n    x: 7,\n    y: y,\n    type: PieceType.ROOK\n  });\n  initialBoardState.push({\n    image: `assets/images/knight_${type}.png`,\n    x: 1,\n    y: y,\n    type: PieceType.KNIGHT\n  });\n  initialBoardState.push({\n    image: `assets/images/knight_${type}.png`,\n    x: 6,\n    y: y,\n    type: PieceType.KNIGHT\n  });\n  initialBoardState.push({\n    image: `assets/images/bishop_${type}.png`,\n    x: 2,\n    y: y,\n    type: PieceType.BISHOP\n  });\n  initialBoardState.push({\n    image: `assets/images/bishop_${type}.png`,\n    x: 5,\n    y: y,\n    type: PieceType.BISHOP\n  });\n  initialBoardState.push({\n    image: `assets/images/queen_${type}.png`,\n    x: 3,\n    y: y,\n    type: PieceType.QUEEN\n  });\n  initialBoardState.push({\n    image: `assets/images/king_${type}.png`,\n    x: 4,\n    y: y,\n    type: PieceType.KING\n  });\n}\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({\n    image: \"assets/images/pawn_b.png\",\n    x: i,\n    y: 6,\n    type: PieceType.PAWN\n  });\n}\nfor (let i = 0; i < 8; i++) {\n  initialBoardState.push({\n    image: \"assets/images/pawn_w.png\",\n    x: i,\n    y: 1,\n    type: PieceType.PAWN\n  });\n}\nexport default function Chessboard() {\n  _s();\n  const [gridX, setGridX] = useState(0);\n  const [gridY, setGridY] = useState(0);\n  const [pieces, setPieces] = useState(initialBoardState);\n  const chessboardRef = useRef(null);\n  const referee = new Referee();\n\n  // let activePiece: HTMLElement | null = null;\n  const [activePiece, setActivePiece] = useState(null);\n  function grabPiece(e) {\n    const element = e.target;\n    const chessboard = chessboardRef.current;\n    if (element.classList.contains(\"chess-piece\") && chessboard) {\n      setGridX(Math.floor((e.clientX - chessboard.offsetLeft) / 75));\n      setGridY(Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 600) / 75)));\n      const x = e.clientX - 40;\n      const y = e.clientY - 40;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n\n      // activePiece = element;\n      setActivePiece(element);\n    }\n  }\n  function movePiece(e) {\n    const element = e.target;\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 50;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 50;\n      const x = e.clientX - 40;\n      const y = e.clientY - 40;\n      activePiece.style.position = \"absolute\";\n\n      // if x is smaller than min\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      }\n      // if x is greater than max\n      else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      }\n      // if x within constraints\n      else {\n        activePiece.style.left = `${x}px`;\n      }\n\n      // if y is smaller than min\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      }\n      // if y is greater than max\n      else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      }\n      // if y is within constraints\n      else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n  function dropPiece(e) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const x = Math.floor((e.clientX - chessboard.offsetLeft) / 75);\n      const y = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 600) / 75));\n      console.log(x, y);\n\n      // update pieces position\n      setPieces(value => {\n        const pieces = value.map(p => {\n          if (p.x === gridX && p.y === gridY) {\n            referee.isValidMove(gridX, gridY, x, y, p.type);\n            p.x = x;\n            p.y = y;\n          }\n          return p;\n        });\n        return pieces;\n      });\n      // activePiece = null;\n      setActivePiece(null);\n    }\n  }\n  let board = [];\n  for (let j = verticalAxis.length - 1; j >= 0; j--) {\n    for (let i = 0; i < horizontalAxis.length; i++) {\n      const number = j + i + 2;\n      let image = \"\";\n      pieces.forEach(p => {\n        if (p.x === i && p.y === j) {\n          image = p.image;\n        }\n      });\n      board.push( /*#__PURE__*/_jsxDEV(Tile, {\n        image: image,\n        number: number\n      }, `${i},${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 28\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseMove: e => movePiece(e),\n    onMouseDown: e => grabPiece(e),\n    onMouseUp: e => dropPiece(e),\n    id: \"chessboard\",\n    ref: chessboardRef,\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 12\n  }, this);\n}\n_s(Chessboard, \"DqvszsCehT9zMglJRobxkUQOn2w=\");\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["Tile","useRef","useState","Referee","jsxDEV","_jsxDEV","verticalAxis","horizontalAxis","PieceType","TeamType","initialBoardState","p","teamType","OPPONENT","OUR","type","OPPE","y","push","image","x","ROOK","KNIGHT","BISHOP","QUEEN","KING","i","PAWN","Chessboard","_s","gridX","setGridX","gridY","setGridY","pieces","setPieces","chessboardRef","referee","activePiece","setActivePiece","grabPiece","e","element","target","chessboard","current","classList","contains","Math","floor","clientX","offsetLeft","abs","ceil","clientY","offsetTop","style","position","left","top","movePiece","minX","minY","maxX","clientWidth","maxY","clientHeight","dropPiece","console","log","value","map","isValidMove","board","j","length","number","forEach","fileName","_jsxFileName","lineNumber","columnNumber","onMouseMove","onMouseDown","onMouseUp","id","ref","children","_c","$RefreshReg$"],"sources":["/Users/liamhackett/Desktop/Chess-App/src/components/Chessboard/Chessboard.tsx"],"sourcesContent":["import Tile from '../Tile/Tile';\nimport './Chessboard.css';\nimport{ useRef, useState} from 'react';\nimport Referee from \"../../referee/Referee\";\n\nconst verticalAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nconst horizontalAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n\ninterface Piece {\n    image: string;\n    x: number;\n    y: number;\n    type: PieceType;\n}\n\nexport enum PieceType {\n    PAWN,\n    BISHOP,\n    KNIGHT,\n    ROOK, \n    QUEEN,\n    KING\n}\n\nexport enum TeamType {\n    OPPONENT,\n    OUR\n}\n\n// const pieces: Piece[] = [];\n\nconst initialBoardState: Piece[] = [];\n\nfor(let p = 0; p < 2; p++){\n    const teamType = (p === 0) ?  TeamType.OPPONENT : TeamType.OUR;\n    const type = (teamType === TeamType.OPPE) ? \"b\" : \"w\";\n    const y = (p === 0) ? 7 : 0;\n    initialBoardState.push({image: `assets/images/rook_${type}.png`, x: 0, y: y, type: PieceType.ROOK});\n    initialBoardState.push({image: `assets/images/rook_${type}.png`, x: 7, y: y, type: PieceType.ROOK});\n    initialBoardState.push({image: `assets/images/knight_${type}.png`, x: 1, y: y, type: PieceType.KNIGHT});\n    initialBoardState.push({image: `assets/images/knight_${type}.png`, x: 6, y: y, type: PieceType.KNIGHT});\n    initialBoardState.push({image: `assets/images/bishop_${type}.png`, x: 2, y: y, type: PieceType.BISHOP});\n    initialBoardState.push({image: `assets/images/bishop_${type}.png`, x: 5, y: y, type: PieceType.BISHOP});\n    initialBoardState.push({image: `assets/images/queen_${type}.png`, x: 3, y: y, type: PieceType.QUEEN});\n    initialBoardState.push({image: `assets/images/king_${type}.png`, x: 4, y: y, type: PieceType.KING});\n}\n\n\n\nfor(let i = 0; i < 8; i++){\n    initialBoardState.push({image: \"assets/images/pawn_b.png\", x: i, y: 6, type: PieceType.PAWN});\n}\n\nfor(let i = 0; i < 8; i++){\n    initialBoardState.push({image: \"assets/images/pawn_w.png\", x: i, y: 1, type: PieceType.PAWN});\n}\n\nexport default function Chessboard() {\n    const [gridX, setGridX] = useState(0);\n    const [gridY, setGridY] = useState(0);\n    const [pieces, setPieces] = useState<Piece[]>(initialBoardState);\n    const chessboardRef = useRef<HTMLDivElement>(null);\n\n    const referee = new Referee;\n\n    // let activePiece: HTMLElement | null = null;\n    const [activePiece, setActivePiece] = useState<HTMLElement | null>(null);\n\n    \n    function grabPiece(e: React.MouseEvent<HTMLDivElement, MouseEvent>){\n        const element = e.target as HTMLElement;\n        const chessboard = chessboardRef.current;\n        if(element.classList.contains(\"chess-piece\") && chessboard){\n            setGridX(Math.floor((e.clientX - chessboard.offsetLeft) / 75));\n            setGridY(Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 600) / 75)));\n    \n\n            const x = e.clientX - 40;\n            const y = e.clientY - 40;\n            element.style.position = \"absolute\";\n            element.style.left = `${x}px`;\n            element.style.top = `${y}px`;\n\n            // activePiece = element;\n            setActivePiece(element);\n\n        }\n    }\n\n    function movePiece(e: React.MouseEvent){\n        const element = e.target as HTMLElement;\n        const chessboard = chessboardRef.current;\n        if(activePiece && chessboard){\n            const minX = chessboard.offsetLeft - 25;\n            const minY = chessboard.offsetTop -25;\n\n            const maxX = chessboard.offsetLeft + chessboard.clientWidth - 50;\n            const maxY = chessboard.offsetTop + chessboard.clientHeight - 50;\n\n            const x = e.clientX - 40;\n            const y = e.clientY - 40;\n\n            activePiece.style.position = \"absolute\";\n            \n            // if x is smaller than min\n            if (x < minX) {\n                activePiece.style.left = `${minX}px`;\n            }\n            // if x is greater than max\n            else if(x > maxX) {\n                activePiece.style.left = `${maxX}px`;\n            }\n            // if x within constraints\n            else {\n                activePiece.style.left = `${x}px`;\n            }\n\n            // if y is smaller than min\n            if (y < minY) {\n                activePiece.style.top = `${minY}px`;\n            }\n            // if y is greater than max\n            else if(y > maxY) {\n                activePiece.style.top = `${maxY}px`;\n            }\n            // if y is within constraints\n            else {\n                activePiece.style.top = `${y}px`;\n            }\n            \n        }\n    }\n\n    function dropPiece(e: React.MouseEvent) {\n        const chessboard = chessboardRef.current;\n        if(activePiece && chessboard) {\n            const x = Math.floor((e.clientX - chessboard.offsetLeft) / 75);\n            const y = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 600) / 75));\n            console.log(x, y);\n\n            \n            // update pieces position\n            setPieces((value) => {\n                const pieces = value.map(p => {\n                    if(p.x === gridX && p.y === gridY){\n                        referee.isValidMove(gridX, gridY, x, y, p.type);\n\n\n                        p.x = x;\n                        p.y = y;\n                    }\n                    return p;\n                })\n                return pieces;\n            })\n            // activePiece = null;\n            setActivePiece(null);\n        }\n    }\n\n    \n    let board = [];\n\n        for(let j = verticalAxis.length - 1; j >= 0; j--){\n            for(let i = 0; i < horizontalAxis.length; i++){\n                const number = j + i + 2;\n                let image = \"\";\n                pieces.forEach(p => {\n                    if(p.x === i && p.y === j){\n                        image = p.image;\n                    }\n                  });\n                board.push(<Tile key={`${i},${j}`} image={image} number= {number} />);\n               \n        }\n    }\n    return <div \n        onMouseMove={e => movePiece(e)} \n        onMouseDown={e => grabPiece(e)} \n        onMouseUp={e => dropPiece(e)}\n        id=\"chessboard\"\n        ref = {chessboardRef}\n    >\n        {board}\n    </div>\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}