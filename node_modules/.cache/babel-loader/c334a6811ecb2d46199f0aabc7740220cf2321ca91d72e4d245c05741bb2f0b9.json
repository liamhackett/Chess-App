{"ast":null,"code":"var _jsxFileName = \"/Users/liamhackett/Desktop/Chess-App/src/components/Chessboard/Chessboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Tile from '../Tile/Tile';\nimport './Chessboard.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst verticalAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nconst horizontalAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst pieces = [];\n\n// for(let p = 0; p < 2; p++){\n//     const type = (p === 0) ? \"b\" : \"w\";\n//     const y = (p === 0) ? 7 : 0;\n//     pieces.push({image: `assets/images/rook_${type}.png`, x: 0, y: y});\n//     pieces.push({image: `assets/images/rook_${type}.png`, x: 7, y: y});\n//     pieces.push({image: `assets/images/knight_${type}.png`, x: 1, y: y});\n//     pieces.push({image: `assets/images/knight_${type}.png`, x: 6, y: y});\n//     pieces.push({image: `assets/images/bishop_${type}.png`, x: 2, y: y});\n//     pieces.push({image: `assets/images/bishop_${type}.png`, x: 5, y: y});\n//     pieces.push({image: `assets/images/bishop_${type}.png`, x: 2, y: y});\n//     pieces.push({image: `assets/images/bishop_${type}.png`, x: 5, y: y});\n//     pieces.push({image: `assets/images/queen_${type}.png`, x: 3, y: y});\n//     pieces.push({image: `assets/images/king_${type}.png`, x: 4, y: y});\n// }\n\n// for(let i = 0; i < 8; i++){\n//     pieces.push({image: \"assets/images/pawn_b.png\", x: i, y: 6});\n// }\n\n// for(let i = 0; i < 8; i++){\n//     pieces.push({image: \"assets/images/pawn_w.png\", x: i, y: 1});\n// }\n\nconst initialBoardState = [];\nexport default function Chessboard() {\n  _s();\n  const [pieces, setPieces] = useState();\n  const chessboardRef = useRef(null);\n  let activePiece = null;\n  useEffect(() => {\n    for (let p = 0; p < 2; p++) {\n      const type = p === 0 ? \"b\" : \"w\";\n      const y = p === 0 ? 7 : 0;\n      initialBoardState.push({\n        image: `assets/images/rook_${type}.png`,\n        x: 0,\n        y: y\n      });\n      initialBoardState.push({\n        image: `assets/images/rook_${type}.png`,\n        x: 7,\n        y: y\n      });\n      initialBoardState.push({\n        image: `assets/images/knight_${type}.png`,\n        x: 1,\n        y: y\n      });\n      initialBoardState.push({\n        image: `assets/images/knight_${type}.png`,\n        x: 6,\n        y: y\n      });\n      initialBoardState.push({\n        image: `assets/images/bishop_${type}.png`,\n        x: 2,\n        y: y\n      });\n      initialBoardState.push({\n        image: `assets/images/bishop_${type}.png`,\n        x: 5,\n        y: y\n      });\n      initialBoardState.push({\n        image: `assets/images/bishop_${type}.png`,\n        x: 2,\n        y: y\n      });\n      pieces.push({\n        image: `assets/images/bishop_${type}.png`,\n        x: 5,\n        y: y\n      });\n      pieces.push({\n        image: `assets/images/queen_${type}.png`,\n        x: 3,\n        y: y\n      });\n      pieces.push({\n        image: `assets/images/king_${type}.png`,\n        x: 4,\n        y: y\n      });\n    }\n    for (let i = 0; i < 8; i++) {\n      pieces.push({\n        image: \"assets/images/pawn_b.png\",\n        x: i,\n        y: 6\n      });\n    }\n    for (let i = 0; i < 8; i++) {\n      pieces.push({\n        image: \"assets/images/pawn_w.png\",\n        x: i,\n        y: 1\n      });\n    }\n  }, []);\n  function grabPiece(e) {\n    const element = e.target;\n    if (element.classList.contains(\"chess-piece\")) {\n      console.log(e);\n      const x = e.clientX - 40;\n      const y = e.clientY - 40;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      activePiece = element;\n    }\n  }\n  function movePiece(e) {\n    const element = e.target;\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 50;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 50;\n      const x = e.clientX - 40;\n      const y = e.clientY - 40;\n      activePiece.style.position = \"absolute\";\n\n      // if x is smaller than min\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      }\n      // if x is greater than max\n      else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      }\n      // if x within constraints\n      else {\n        activePiece.style.left = `${x}px`;\n      }\n\n      // if y is smaller than min\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      }\n      // if y is greater than max\n      else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      }\n      // if y is within constraints\n      else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n  function dropPiece(e) {\n    if (activePiece) {\n      pieces[0].x = 5;\n      activePiece = null;\n    }\n  }\n  let board = [];\n  for (let j = verticalAxis.length - 1; j >= 0; j--) {\n    for (let i = 0; i < horizontalAxis.length; i++) {\n      const number = j + i + 2;\n      let image = \"\";\n      pieces.forEach(p => {\n        console.log(i, j);\n        if (p.x === i && p.y === j) {\n          image = p.image;\n        }\n      });\n      board.push( /*#__PURE__*/_jsxDEV(Tile, {\n        image: image,\n        number: number\n      }, `${i},${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 28\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseMove: e => movePiece(e),\n    onMouseDown: e => grabPiece(e),\n    onMouseUp: e => dropPiece(e),\n    id: \"chessboard\",\n    ref: chessboardRef,\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 12\n  }, this);\n}\n_s(Chessboard, \"ySqeyCAYhnl0/zK3HO0VhjVUmdY=\");\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["React","useEffect","Tile","useRef","useState","jsxDEV","_jsxDEV","verticalAxis","horizontalAxis","pieces","initialBoardState","Chessboard","_s","setPieces","chessboardRef","activePiece","p","type","y","push","image","x","i","grabPiece","e","element","target","classList","contains","console","log","clientX","clientY","style","position","left","top","movePiece","chessboard","current","minX","offsetLeft","minY","offsetTop","maxX","clientWidth","maxY","clientHeight","dropPiece","board","j","length","number","forEach","fileName","_jsxFileName","lineNumber","columnNumber","onMouseMove","onMouseDown","onMouseUp","id","ref","children","_c","$RefreshReg$"],"sources":["/Users/liamhackett/Desktop/Chess-App/src/components/Chessboard/Chessboard.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Tile from '../Tile/Tile';\nimport './Chessboard.css';\nimport{ useRef, useState} from 'react';\n\nconst verticalAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nconst horizontalAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n\ninterface Piece {\n    image: string;\n    x: number;\n    y: number;\n}\n\nconst pieces: Piece[] = [];\n\n// for(let p = 0; p < 2; p++){\n//     const type = (p === 0) ? \"b\" : \"w\";\n//     const y = (p === 0) ? 7 : 0;\n//     pieces.push({image: `assets/images/rook_${type}.png`, x: 0, y: y});\n//     pieces.push({image: `assets/images/rook_${type}.png`, x: 7, y: y});\n//     pieces.push({image: `assets/images/knight_${type}.png`, x: 1, y: y});\n//     pieces.push({image: `assets/images/knight_${type}.png`, x: 6, y: y});\n//     pieces.push({image: `assets/images/bishop_${type}.png`, x: 2, y: y});\n//     pieces.push({image: `assets/images/bishop_${type}.png`, x: 5, y: y});\n//     pieces.push({image: `assets/images/bishop_${type}.png`, x: 2, y: y});\n//     pieces.push({image: `assets/images/bishop_${type}.png`, x: 5, y: y});\n//     pieces.push({image: `assets/images/queen_${type}.png`, x: 3, y: y});\n//     pieces.push({image: `assets/images/king_${type}.png`, x: 4, y: y});\n// }\n\n\n\n// for(let i = 0; i < 8; i++){\n//     pieces.push({image: \"assets/images/pawn_b.png\", x: i, y: 6});\n// }\n\n// for(let i = 0; i < 8; i++){\n//     pieces.push({image: \"assets/images/pawn_w.png\", x: i, y: 1});\n// }\n\n\nconst initialBoardState: Piece[] = [];\n\nexport default function Chessboard() {\n    const [pieces, setPieces] = useState<Piece[]>();\n    const chessboardRef = useRef<HTMLDivElement>(null);\n\n\n    let activePiece: HTMLElement | null = null;\n\n    useEffect(() => {\n        for(let p = 0; p < 2; p++){\n            const type = (p === 0) ? \"b\" : \"w\";\n            const y = (p === 0) ? 7 : 0;\n            initialBoardState.push({image: `assets/images/rook_${type}.png`, x: 0, y: y});\n            initialBoardState.push({image: `assets/images/rook_${type}.png`, x: 7, y: y});\n            initialBoardState.push({image: `assets/images/knight_${type}.png`, x: 1, y: y});\n            initialBoardState.push({image: `assets/images/knight_${type}.png`, x: 6, y: y});\n            initialBoardState.push({image: `assets/images/bishop_${type}.png`, x: 2, y: y});\n            initialBoardState.push({image: `assets/images/bishop_${type}.png`, x: 5, y: y});\n            initialBoardState.push({image: `assets/images/bishop_${type}.png`, x: 2, y: y});\n            pieces.push({image: `assets/images/bishop_${type}.png`, x: 5, y: y});\n            pieces.push({image: `assets/images/queen_${type}.png`, x: 3, y: y});\n            pieces.push({image: `assets/images/king_${type}.png`, x: 4, y: y});\n        }\n        \n        \n        \n        for(let i = 0; i < 8; i++){\n            pieces.push({image: \"assets/images/pawn_b.png\", x: i, y: 6});\n        }\n        \n        for(let i = 0; i < 8; i++){\n            pieces.push({image: \"assets/images/pawn_w.png\", x: i, y: 1});\n        }\n    }, [])\n\n    function grabPiece(e: React.MouseEvent<HTMLDivElement, MouseEvent>){\n        const element = e.target as HTMLElement;\n        if(element.classList.contains(\"chess-piece\")){\n            console.log(e);\n\n            const x = e.clientX - 40;\n            const y = e.clientY - 40;\n            element.style.position = \"absolute\";\n            element.style.left = `${x}px`;\n            element.style.top = `${y}px`;\n\n            activePiece = element;\n\n        }\n    }\n\n    function movePiece(e: React.MouseEvent){\n        const element = e.target as HTMLElement;\n        const chessboard = chessboardRef.current;\n        if(activePiece && chessboard){\n            const minX = chessboard.offsetLeft - 25;\n            const minY = chessboard.offsetTop -25;\n\n            const maxX = chessboard.offsetLeft + chessboard.clientWidth - 50;\n            const maxY = chessboard.offsetTop + chessboard.clientHeight - 50;\n\n            const x = e.clientX - 40;\n            const y = e.clientY - 40;\n\n            activePiece.style.position = \"absolute\";\n            \n            // if x is smaller than min\n            if (x < minX) {\n                activePiece.style.left = `${minX}px`;\n            }\n            // if x is greater than max\n            else if(x > maxX) {\n                activePiece.style.left = `${maxX}px`;\n            }\n            // if x within constraints\n            else {\n                activePiece.style.left = `${x}px`;\n            }\n\n            // if y is smaller than min\n            if (y < minY) {\n                activePiece.style.top = `${minY}px`;\n            }\n            // if y is greater than max\n            else if(y > maxY) {\n                activePiece.style.top = `${maxY}px`;\n            }\n            // if y is within constraints\n            else {\n                activePiece.style.top = `${y}px`;\n            }\n            \n        }\n    }\n\n    function dropPiece(e: React.MouseEvent) {\n        if(activePiece) {\n            pieces[0].x = 5;\n            activePiece = null;\n        }\n    }\n\n    \n    let board = [];\n\n        for(let j = verticalAxis.length - 1; j >= 0; j--){\n            for(let i = 0; i < horizontalAxis.length; i++){\n                const number = j + i + 2;\n                let image = \"\";\n                pieces.forEach(p => {\n                    console.log(i, j);\n                    if(p.x === i && p.y === j){\n                        image = p.image;\n                    }\n                  });\n                board.push(<Tile key={`${i},${j}`} image={image} number= {number} />);\n               \n        }\n    }\n    return <div \n        onMouseMove={e => movePiece(e)} \n        onMouseDown={e => grabPiece(e)} \n        onMouseUp={e => dropPiece(e)}\n        id=\"chessboard\"\n        ref = {chessboardRef}\n    >\n        {board}\n    </div>\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}