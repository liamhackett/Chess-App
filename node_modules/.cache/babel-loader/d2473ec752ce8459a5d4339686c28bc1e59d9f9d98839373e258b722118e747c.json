{"ast":null,"code":"import { PieceType, TeamType } from \"../components/Chessboard/Chessboard\";\nexport default class Referee {\n  tileIsOccupied(x, y, boardState) {\n    console.log(\"Checking if tile is occupied\");\n    const piece = boardState.find(p => p.x === x && p.y === y);\n    if (piece) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  tileIsOccupiedByOpponent(x, y, boardState, team) {\n    const piece = boardState.find(p => p.x === x && p.y === y & p.team != team);\n    return true;\n  }\n  isValidMove(px, py, x, y, type, team, boardState) {\n    console.log(\"Ref is checking move\");\n    console.log(`\"Previous Location: ${px} ${py}`);\n    console.log(`\"Current Location: ${x} ${y}`);\n    console.log(`Piece Type: ${type}`);\n    console.log(`Team: ${team}`);\n\n    // pawn movement \n    if (type === PieceType.PAWN) {\n      const specialRow = team === TeamType.OUR ? 1 : 6;\n      const pawnDirection = team === TeamType.OUR ? 1 : -1;\n\n      // forward movement\n      if (py === specialRow && y - py === 2 * pawnDirection) {\n        if (!this.tileIsOccupied(x, y, boardState) && !this.tileIsOccupied(x, y - pawnDirection, boardState)) {\n          return true;\n        }\n      } else if (px === x && y - py === pawnDirection) {\n        if (!this.tileIsOccupied(x, y, boardState)) {\n          return true;\n        }\n      }\n\n      // taking a piece\n      else if (x - px === -1 && y - py === pawnDirection) {\n        // attack in upper or bottom left corner\n        if (this.tileIsOccupiedByOpponent(x, y, boardState, team)) {}\n      } else if (x - px === 1 && y - py === pawnDirection) {\n        // attack in upper or bottom right corner\n        if (this.tileIsOccupiedByOpponent(x, y, boardState, team)) {}\n      }\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["PieceType","TeamType","Referee","tileIsOccupied","x","y","boardState","console","log","piece","find","p","tileIsOccupiedByOpponent","team","isValidMove","px","py","type","PAWN","specialRow","OUR","pawnDirection"],"sources":["/Users/liamhackett/Desktop/Chess-App/src/referee/Referee.ts"],"sourcesContent":["import { PieceType, TeamType , Piece} from \"../components/Chessboard/Chessboard\";\n\nexport default class Referee {\n\n    tileIsOccupied(x: number, y: number, boardState: Piece[]): boolean {\n        console.log(\"Checking if tile is occupied\");\n        const piece = boardState.find(p => p.x === x && p.y === y);\n        if(piece){\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    tileIsOccupiedByOpponent(x: number, y: number, boardState: Piece[], team: TeamType): boolean {\n        const piece = boardState.find(p => p.x === x && p.y === y & p.team != team);\n        return true;\n    }\n\n    isValidMove(px: number, py: number, x: number, y: number, type: PieceType, team: TeamType, boardState: Piece[]) {\n        console.log(\"Ref is checking move\");\n        console.log(`\"Previous Location: ${px} ${py}`);\n        console.log(`\"Current Location: ${x} ${y}`);\n        console.log(`Piece Type: ${type}`);\n        console.log(`Team: ${team}`);\n\n        // pawn movement \n        if (type === PieceType.PAWN){\n            const specialRow = (team === TeamType.OUR) ? 1: 6;\n            const pawnDirection = (team === TeamType.OUR) ? 1: -1;\n            \n            // forward movement\n            if(py === specialRow && y - py === 2 *pawnDirection){\n                if(!this.tileIsOccupied(x, y, boardState) && !this.tileIsOccupied(x, y - pawnDirection, boardState)){\n                        return true;\n                }\n            }\n            else if(px === x && (y - py === pawnDirection)){\n                    if(!this.tileIsOccupied(x, y, boardState)){\n                        return true;\n                    }\n            }\n            \n            // taking a piece\n            else if (x - px === -1 && y - py === pawnDirection){\n                // attack in upper or bottom left corner\n                if(this.tileIsOccupiedByOpponent(x, y, boardState, team)){\n\n                }\n            }\n            else if (x - px === 1 && y - py === pawnDirection){\n                // attack in upper or bottom right corner\n                if(this.tileIsOccupiedByOpponent(x, y, boardState, team)){\n                    \n                }\n            }\n        }\n\n\n        return false;\n    }\n}"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAe,qCAAqC;AAEhF,eAAe,MAAMC,OAAO,CAAC;EAEzBC,cAAcA,CAACC,CAAS,EAAEC,CAAS,EAAEC,UAAmB,EAAW;IAC/DC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C,MAAMC,KAAK,GAAGH,UAAU,CAACI,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACP,CAAC,KAAKA,CAAC,IAAIO,CAAC,CAACN,CAAC,KAAKA,CAAC,CAAC;IAC1D,IAAGI,KAAK,EAAC;MACL,OAAO,IAAI;IACf,CAAC,MACI;MACD,OAAO,KAAK;IAChB;EACJ;EAEAG,wBAAwBA,CAACR,CAAS,EAAEC,CAAS,EAAEC,UAAmB,EAAEO,IAAc,EAAW;IACzF,MAAMJ,KAAK,GAAGH,UAAU,CAACI,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACP,CAAC,KAAKA,CAAC,IAAIO,CAAC,CAACN,CAAC,KAAKA,CAAC,GAAGM,CAAC,CAACE,IAAI,IAAIA,IAAI,CAAC;IAC3E,OAAO,IAAI;EACf;EAEAC,WAAWA,CAACC,EAAU,EAAEC,EAAU,EAAEZ,CAAS,EAAEC,CAAS,EAAEY,IAAe,EAAEJ,IAAc,EAAEP,UAAmB,EAAE;IAC5GC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnCD,OAAO,CAACC,GAAG,CAAE,uBAAsBO,EAAG,IAAGC,EAAG,EAAC,CAAC;IAC9CT,OAAO,CAACC,GAAG,CAAE,sBAAqBJ,CAAE,IAAGC,CAAE,EAAC,CAAC;IAC3CE,OAAO,CAACC,GAAG,CAAE,eAAcS,IAAK,EAAC,CAAC;IAClCV,OAAO,CAACC,GAAG,CAAE,SAAQK,IAAK,EAAC,CAAC;;IAE5B;IACA,IAAII,IAAI,KAAKjB,SAAS,CAACkB,IAAI,EAAC;MACxB,MAAMC,UAAU,GAAIN,IAAI,KAAKZ,QAAQ,CAACmB,GAAG,GAAI,CAAC,GAAE,CAAC;MACjD,MAAMC,aAAa,GAAIR,IAAI,KAAKZ,QAAQ,CAACmB,GAAG,GAAI,CAAC,GAAE,CAAC,CAAC;;MAErD;MACA,IAAGJ,EAAE,KAAKG,UAAU,IAAId,CAAC,GAAGW,EAAE,KAAK,CAAC,GAAEK,aAAa,EAAC;QAChD,IAAG,CAAC,IAAI,CAAClB,cAAc,CAACC,CAAC,EAAEC,CAAC,EAAEC,UAAU,CAAC,IAAI,CAAC,IAAI,CAACH,cAAc,CAACC,CAAC,EAAEC,CAAC,GAAGgB,aAAa,EAAEf,UAAU,CAAC,EAAC;UAC5F,OAAO,IAAI;QACnB;MACJ,CAAC,MACI,IAAGS,EAAE,KAAKX,CAAC,IAAKC,CAAC,GAAGW,EAAE,KAAKK,aAAc,EAAC;QACvC,IAAG,CAAC,IAAI,CAAClB,cAAc,CAACC,CAAC,EAAEC,CAAC,EAAEC,UAAU,CAAC,EAAC;UACtC,OAAO,IAAI;QACf;MACR;;MAEA;MAAA,KACK,IAAIF,CAAC,GAAGW,EAAE,KAAK,CAAC,CAAC,IAAIV,CAAC,GAAGW,EAAE,KAAKK,aAAa,EAAC;QAC/C;QACA,IAAG,IAAI,CAACT,wBAAwB,CAACR,CAAC,EAAEC,CAAC,EAAEC,UAAU,EAAEO,IAAI,CAAC,EAAC,CAEzD;MACJ,CAAC,MACI,IAAIT,CAAC,GAAGW,EAAE,KAAK,CAAC,IAAIV,CAAC,GAAGW,EAAE,KAAKK,aAAa,EAAC;QAC9C;QACA,IAAG,IAAI,CAACT,wBAAwB,CAACR,CAAC,EAAEC,CAAC,EAAEC,UAAU,EAAEO,IAAI,CAAC,EAAC,CAEzD;MACJ;IACJ;IAGA,OAAO,KAAK;EAChB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}